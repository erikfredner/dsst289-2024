---
title: "Creating features with *Animal Crossing* data"
subtitle: "DSST 289: Introduction to Data Science"
author: "Erik Fredner"
date: "`r Sys.Date()`"
echo: true
format:
  revealjs:
    logo: "images/by-sa.png"
    footer: "https://fredner.org"
    embed-resources: true
    scrollable: true
editor_options: 
  chunk_output_type: inline
---

# Overview

-   *Animal Crossing* üêü data
-   `mutate()`
-   `if_else()`
-   `case_when()`
-   exam review

# üêü = üí∞

What's the best strategy to get rich fishing?

![Fishing in *Animal Crossing*](images/fishing.jpg)

## *Animal Crossing* fish data

```{r}
#| echo: false

library(tidyverse)
library(knitr)
library(ggrepel)
library(clipr)

fish <- read_csv(file.path("..", "data", "acnh_fish.csv"))

# separate the spawn_rates
fish <- fish |>
  separate(spawn_rates, into = c("spawn_low", "spawn_high"), sep = "‚Äì", fill = "right") |>
  mutate(spawn_high = if_else(is.na(spawn_high), spawn_low, spawn_high)) |>
  mutate(
    spawn_low = as.numeric(spawn_low),
    spawn_high = as.numeric(spawn_high)
  ) |>
  # separate location
  separate(location, into = c("location", "location_condition"), sep = " \\(", fill = "right") |>
  # remove trailing )
  mutate(location_condition = gsub("\\)", "", location_condition))

fish |>
  select(name, value, location, spawn_low, spawn_high) |>
  slice_sample(n = 5) |>
  kable()
```

# `mutate`ing spawn rates

-   Spawn rates tell us how likely we are to see a fish.
-   Higher values are more common than low values.

```{r}
#| output-location: fragment
#| code-line-numbers: "2|3|4"
fish |>
  mutate(spawn_rate = (spawn_low + spawn_high) / 2) |>
  select(name, spawn_low, spawn_high, spawn_rate) |>
  arrange(desc(spawn_rate)) |>
  slice_head(n = 5)
```

# `mutate` with `if_else`

```{r}
#| output-location: fragment
#| code-line-numbers: "5"
fish |>
  mutate(
    spawn_rate = (spawn_low + spawn_high) / 2,
    # new:
    spawn_freq = if_else(spawn_rate > 10, "common", "rare")
  ) |>
  select(name, spawn_rate, spawn_freq) |>
  arrange(desc(spawn_rate)) |>
  slice_sample(n = 5)
```

## Is common vs. rare enough?

```{r}
#| output-location: slide
#| code-line-numbers: "2-5"
fish |>
  mutate(
    spawn_rate = (spawn_low + spawn_high) / 2,
    spawn_freq = if_else(spawn_rate > 10, "common", "rare")
  ) |>
  ggplot(aes(x = spawn_rate, y = value, color = spawn_freq)) +
  geom_point() +
  geom_text_repel(aes(label = name))
```

# `case_when` for multiple categories

```{r}
#| code-line-numbers: "4-10"
fish <- fish |>
  mutate(
    spawn_rate = (spawn_low + spawn_high) / 2,
    spawn_freq = case_when(
      spawn_rate > 15 ~ "very common",
      spawn_rate > 10 ~ "common",
      spawn_rate > 5 ~ "uncommon",
      spawn_rate > 2 ~ "rare",
      spawn_rate <= 2 ~ "very rare",
      TRUE ~ "default"
    )
  )
```

## What that looks like

```{r}
fish |>
  arrange(desc(spawn_rate)) |>
  select(name, spawn_rate, spawn_freq) |>
  slice_sample(n = 5) |>
  kable()
```

# Valuable *and* common?

```{r}
#| output-location: slide
#| code-line-numbers: "2"

fish |>
  ggplot(aes(x = spawn_rate, y = value, color = spawn_freq)) +
  geom_point() +
  geom_text_repel(aes(label = name)) +
  # draw line from origin to max
  geom_segment(aes(x = 0,
                   y = 0,
                   xend = max(spawn_rate),
                   yend = max(value)),
               linetype = "dashed",
               color = "gray",
               alpha = 0.1)
```

# Where should we fish?

```{r}
#| output-location: slide
#| code-line-numbers: "2-3|4-5|6-8|9-15"
fish |>
  # get rid of common or very common fish:
  filter(!spawn_freq %in% c("common", "very common")) |>
  # only keep fish above median value:
  filter(value > median(value)) |>
  ggplot(aes(x = spawn_rate, y = value, color = location)) +
  geom_point() +
  geom_text_repel(aes(label = name)) +
  geom_segment(aes(x = 0,
                   y = 0,
                   xend = max(spawn_rate),
                   yend = max(value)),
               linetype = "dashed",
               color = "gray",
               alpha = 0.1)
```

## From spawn rate to spawn probability

```{r}
#| code-line-numbers: "2|3|4"
fish |>
  group_by(location) |>
  mutate(spawn_prob = spawn_rate / sum(spawn_rate)) |>
  ungroup() |>
  select(name, spawn_rate, location, spawn_prob) |>
  slice_sample(n = 5)
```

## Sneak preview: simulation

```{r}
#| echo: false

simulate_fishing <- function(sim_number) {
  fish |> 
    group_by(location) |> 
    mutate(spawn_prob = spawn_rate / sum(spawn_rate)) |> 
    ungroup() |> 
    group_by(location) |> 
    reframe(
      caught_fish = sample(name, size = 100, prob = spawn_prob, replace = TRUE),
      value_per_fish = value[match(caught_fish, name)],
      fish_number = 1:100
    ) |> 
    group_by(location) |> 
    mutate(cumulative_value = cumsum(value_per_fish)) |> 
    ungroup() |> 
    ggplot(aes(x = fish_number, y = cumulative_value, color = location)) +
    geom_line(size = 1.2) +
    labs(
      title = paste("Cumulative Money Made per Fish Caught - Simulation", sim_number),
      x = "Number of Fish Caught",
      y = "Cumulative Value",
      color = "Location"
    ) +
    theme_minimal()
}

walk(1:25, ~print(simulate_fishing(.x)))
```

# Exam review

